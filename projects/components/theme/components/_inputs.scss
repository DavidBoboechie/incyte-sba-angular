
.form-control {
  border: $sq-border;

  &:focus,
  &:focus-visible,
  &:focus-within {
    border-color: var(--primary, #{$blue-1}) !important;

    &:not(.dropdown-toggle) {
      box-shadow: none !important;
      outline: none;
      border-color: var(--primary, #{$blue-1});
    }
  }

  &.was-validated:valid {
    border-color: $success-1;
  }

  &.was-validated:invalid {
    border-color: $error-1;
  }

  &.is-valid,
  &.is-invalid {
    background-image: none;
    padding-right: calc(1.5rem - 0.75rem);
  }

  &:disabled {
    background-color: $grey-3;
    border-color: $grey-5;
    color: $grey-6;
  }

  // placeholder
  &:not(:disabled) {
    &::placeholder {
      color: $grey-3;
      opacity: 1;
    }

    &:-ms-input-placeholder {
      color: $grey-3;
    }

    &::-ms-input-placeholder {
      color: $grey-3;
    }
  }

}

/**
Label
 */
.form-label {
  font-weight: 600;

  .info {
    font-weight: 400;
    color: $grey-3;
  }
}


/**
Error message
 */
.invalid-feedback {
  color: $error-1;
}

.input-group {
  --bs-card-border-width: .7rem;
  --bs-card-border-color: #{$white-2};
  box-shadow: 0px 4px 9px rgba(0, 0, 0, .08);
  border-radius: .375rem;

  .form-control,
  .form-select {
    border: 0;
  }

  input + button {
    z-index: 9 !important;
  }

  .d-flex {

    input[type=text],
    select {
      border: none;
      outline: 0;
      width: 100%;
      min-width: 100px;
      padding: .375rem 1.2rem;


      &::placeholder {
        color: $grey-3;
        opacity: 1;
      }

      &:-ms-input-placeholder {
        color: $grey-3;
      }

      &::-ms-input-placeholder {
        color: $grey-3;
      }
    }
  }

  button {
    box-shadow: none !important;
    --bs-btn-padding-x: 1rem !important;

    i {
      margin: 0;
    }
  }
}

/**
Input with prepend/append icons
 */
.input-group:has(.input-group-append, .input-group-prepend),
.input-group.input-icon {
  border: .1rem solid #d3d3d3;
  box-shadow: none;

  &:focus-within {
    border-color: var(--primary, #{$blue-1});
  }

  &:has(input:disabled, select:disabled),
  &.disabled {
    border-color: $grey-5;
    background-color: $grey-3;

    .input-group-text {
      background-color: $grey-3;
      color: $grey-6;
    }
  }

  &:has(*.was-validated:valid),
  &.valid {
    border-color: $success-1;
  }

  &:has(*.was-validated:invalid),
  &.invalid {
    border-color: $error-1;
  }
}

.input-group-text {
  border: 0;
  height: 100%;
}

.input-group-prepend .input-group-text {
  border-radius: .375rem 0 0 .375rem;
  padding-right: .1rem;
}

.input-group-append .input-group-text {
  border-radius: 0 .375rem .375rem 0;
  padding-left: .1rem;
}

/**
Header search input
 */
nav .input-group {
  .form-control {
    padding: 0;
  }

  input {
    border-radius: 0.375rem;
  }

  .btn {
    --bs-btn-padding-y: .5rem;
    --bs-btn-padding-x: .8rem !important;
  }
}

// remove padding from sq-dropdown-form's div containing the input already having one
.sq-dropdown-form .form-control {
  padding: 0;
}

sq-scope .btn {
  border: 0;
}
